{"version":3,"sources":["store/Contexts.js","store/NoteProvider.js","Components/Header.js","Components/Footer.js","Components/PageHeader.js","Components/pages/Note.js","Components/pages/Notes.js","Components/pages/AddNote.js","Components/pages/EditNote.js","Components/pages/About.js","Components/pages/SearchResult.js","Components/pages/NotFound.js","Components/App.js","serviceWorker.js","index.js"],"names":["NoteContext","createContext","NoteProvider","state","notes","id","title","description","addNote","note","setState","editNote","editedNote","newNote","map","delete","filter","access","this","Provider","value","props","children","Component","Header","className","to","activeClassName","exact","Footer","PageHeader","style","width","count","Note","edit","history","push","paramID","Number","match","params","filterd","context","onClick","contextType","Notes","search","searchSubmit","e","preventDefault","change","target","name","Fragment","length","onSubmit","type","onChange","placeholder","index","key","AddNote","errors","submit","err","rows","EditNote","console","log","About","SearchResult","result","q","NotFound","App","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.89e545e0.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\n\r\nexport const NoteContext = createContext();\r\n\r\n","import React, { Component } from 'react';\r\nimport { NoteContext } from './Contexts';\r\n\r\n\r\nclass NoteProvider extends Component {\r\n  state = {\r\n    notes: [\r\n      {id:1, title: \"Note 1 Title\", description: \"Note 1 Description\"},\r\n      {id:2, title: \"Note 2 Title\", description: \"Note 2 Description\"},\r\n      {id:3, title: \"Note 3 Title\", description: \"Note 3 Description\"},\r\n      {id:4, title: \"Note 4 Title\", description: \"Note 4 Description\"},\r\n      {id:5, title: \"Note 5 Title\", description: \"Note 5 Description\"},\r\n      {id:6, title: \"Note 6 Title\", description: \"Note 6 Description\"},\r\n      {id:7, title: \"Note 7 Title\", description: \"Note 7 Description\"},\r\n      {id:8, title: \"Note 8 Title\", description: \"Note 8 Description\"},\r\n      {id:9, title: \"Note 9 Title\", description: \"Note 9 Description\"},\r\n      {id:10, title: \"Note 10 Title\", description: \"Note 10 Description\"},\r\n      {id:11, title: \"Note 11 Title\", description: \"Note 11 Description\"},\r\n      {id:12, title: \"Note 12 Title\", description: \"Note 12 Description\"},\r\n      {id:13, title: \"Note 13 Title\", description: \"Note 13 Description\"}\r\n    ]\r\n  }\r\n\r\n  addNote = note => {\r\n    this.setState({\r\n      notes:[...this.state.notes, note]\r\n    })\r\n  }\r\n\r\n// handle form EditNote Component\r\n  editNote = editedNote => {\r\n    const { id, title, description } = editedNote;\r\n    let newNote = this.state.notes.map(note => {\r\n      if ( id === note.id ) {\r\n        return { id, title, description }\r\n      }\r\n      return note;\r\n    })\r\n    this.setState({\r\n      notes: newNote\r\n    })\r\n  }\r\n\r\n\r\n\r\n  delete = id => {\r\n    this.setState({\r\n      notes: this.state.notes.filter(note => note.id !== id )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const access = {\r\n      notes: this.state.notes,\r\n      addNote: this.addNote,\r\n      editNote: this.editNote,\r\n      delete: this.delete\r\n    }\r\n    return(\r\n      <NoteContext.Provider value={ access }>\r\n        { this.props.children }\r\n      </NoteContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoteProvider","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"left\">\r\n      <Link className=\"brand\" to=\"/\" >NoteBook</Link>\r\n      </div>\r\n      <div className=\"right\">\r\n        <NavLink activeClassName=\"active\" to= \"/\" exact >Home</NavLink>\r\n        <NavLink activeClassName=\"active\" to= \"/add\" >Add Note</NavLink>\r\n        <NavLink activeClassName=\"active\" to= \"/about\" >About</NavLink>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\nexport default Header","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <h4>&copy; SChoolWab | 2019-2020</h4>\r\n    </footer>\r\n  )\r\n}\r\nexport default Footer","import React, { Component } from 'react'\r\n\r\nclass PageHeader extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"page-header\"\r\n        style={this.props.width ? {\"display\": \"block\"}:{\"display\":\"flex\"}}>\r\n        <span\r\n          className=\"title\"\r\n          >\r\n            { this.props.title }\r\n            {this.props.count ? <span className=\"count\">{ this.props.count }</span> : null}\r\n        </span>\r\n        <span className=\"search\">\r\n        { this.props.children }\r\n        </span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default PageHeader","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { NoteContext } from '../../store/Contexts'\r\n\r\nimport PageHeader from '../PageHeader'\r\n\r\nclass Note extends Component {\r\n  static contextType = NoteContext;\r\n\r\n\r\n  edit = id => {\r\n    this.props.history.push(`/edit/${id}`);\r\n  }\r\n\r\n\r\n  render() {\r\n    const paramID = Number(this.props.match.params.id)\r\n    const filterd = this.context.notes.filter(note=> note.id === paramID)[0]\r\n    const { title, description } = filterd;\r\n\r\n    return (\r\n      <div>\r\n        <PageHeader title= { title } width=\"100%\" />\r\n        <p className=\"note\"> { description } </p>\r\n\r\n        <br/>\r\n        <br/>\r\n        <span className=\"right\" >\r\n          <button\r\n            className=\"btn delete\"\r\n            onClick= { () => this.context.delete(paramID) }\r\n          >Delete</button>\r\n\r\n          <Link\r\n            to = \"/\"\r\n            className=\"btn delete\"\r\n          >Cencel</Link>\r\n\r\n          <button\r\n            className=\"btn submit\"\r\n            onClick= { () => this.edit(paramID) }\r\n          >Edit</button>\r\n        </span>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Note\r\n","import React, { Component } from 'react'\r\nimport { NoteContext } from '../../store/Contexts';\r\n\r\nimport PageHeader from '../PageHeader';\r\n\r\nclass Notes extends Component {\r\n  static contextType = NoteContext;\r\n\r\n  state = {\r\n    search: ''\r\n  }\r\n\r\n  searchSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.history.push(\"/search\")\r\n  }\r\n\r\n  change = e => {\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n\r\n  note = id => {\r\n    this.props.history.push(`/${id}`)\r\n  }\r\n\r\n  edit = id => {\r\n    this.props.history.push(`/edit/${id}`);\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.context;\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <PageHeader title=\"All Notes\" count= {notes.length} >\r\n          <form onSubmit={ this.searchSubmit } >\r\n            <input \r\n              type=\"search\"\r\n              className=\"input search\"\r\n              name= \"search\"\r\n              onChange= { this.change }\r\n              value= { this.state.search }\r\n              placeholder= \"Search Notes...\"\r\n            />\r\n          </form>\r\n        </PageHeader>\r\n\r\n        {notes.length < 1 ? <h2 className=\"page-err\">No more notes are available...</h2>: null}\r\n\r\n        {\r\n          notes.map((note, index) => {\r\n            return(\r\n              <div\r\n              className=\"note-card\"\r\n              key={ index }\r\n              onClick= { ()=> this.note(note.id) } >\r\n                <span \r\n                  className=\"note-content\">\r\n                    <h2>{ note.title }</h2>\r\n                    <p>{ note.description }</p>\r\n                </span>\r\n      \r\n                <span className=\"action\">\r\n                <button\r\n                    className=\"btn delete\"\r\n                    onClick= { () => this.context.delete(note.id) }\r\n                  >Delete</button>\r\n\r\n                  <button\r\n                    className=\"btn submit\"\r\n                    onClick= { () => this.edit(note.id) }\r\n                  >Edit</button>\r\n                </span>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Notes\r\n\r\n","import React, {\r\n  Component\r\n} from 'react';\r\nimport {\r\n  Link\r\n} from 'react-router-dom';\r\nimport {\r\n  NoteContext\r\n} from '../../store/Contexts';\r\n\r\nclass AddNote extends Component {\r\n  static contextType = NoteContext;\r\n\r\n  state = {\r\n    id: this.context.notes.length,\r\n    title: '',\r\n    description: '',\r\n    errors: {}\r\n  }\r\n\r\n  change = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  submit = e => {\r\n    e.preventDefault();\r\n    const {\r\n      id,\r\n      title,\r\n      description\r\n    } = this.state;\r\n\r\n    const err = {\r\n      title: 'Please Insert a Title !',\r\n      description: 'Please Insert a Discription !'\r\n    }\r\n\r\n    //  Title && Body Error\r\n    if (title === '' && description === '') {\r\n      this.setState({\r\n        errors: {\r\n          title: err.title,\r\n          description: err.description\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    //  Titile Error\r\n    if (title === '') {\r\n      this.setState({\r\n        errors: {\r\n          title: err.title,\r\n          description: ''\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    //  Body Error\r\n    if (description === '') {\r\n      this.setState({\r\n        errors: {\r\n          title: '',\r\n          description: err.description\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    //  No Error\r\n    if (title !== '' && description !== '') {\r\n      const note = {\r\n        id,\r\n        title,\r\n        description\r\n      }\r\n      this.context.addNote(note);\r\n\r\n      this.props.history.push('/');\r\n      this.setState({});\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      description\r\n    } = this.state;\r\n    return ( \r\n    <div>\r\n      <h1 className = \"page-header\" > Add Note </h1>\r\n        <form onSubmit = {this.submit} >\r\n\r\n          <input className = \"input input-text\"\r\n          name = \"title\"\r\n          value = {title}\r\n          onChange = {this.change}\r\n          placeholder = \"Enter Note Title\" />\r\n\r\n          <textarea className = \"input input-text\"\r\n          name = \"description\"\r\n          value = {description}\r\n          onChange = {this.change}\r\n          placeholder = \"Please Note Description\"\r\n          rows = \"3\" >\r\n          </textarea>\r\n\r\n          <span className = \"right\" >\r\n            <Link to = \"/\"\r\n            className = \"btn delete\" >\r\n            Go Back </Link>\r\n            \r\n            <button className = \"btn submit\"\r\n            onClick = {this.submit} >\r\n            Add Note </button>\r\n            </span>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddNote","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { NoteContext } from '../../store/Contexts'\r\n\r\nclass EditNote extends Component {\r\n  static contextType = NoteContext;\r\n\r\n  paramID =  Number(this.props.match.params.id);\r\n  filterd = this.context.notes.filter(note => note.id === this.paramID)[0]\r\n\r\n  state = {\r\n    id: this.paramID,\r\n    title: this.filterd.title,\r\n    description: this.filterd.description\r\n  }\r\n\r\n  change = e => {\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n\r\n  submit = e => {\r\n    e.preventDefault();\r\n    const { id, title, description } = this.state;\r\n\r\n    const err = {\r\n      title: 'Please Insert a Title !',\r\n      description: 'Please Insert a Discription !'\r\n    }\r\n\r\n    //  Title && Body Error\r\n    if (title === '' && description === ''){\r\n      this.setState({\r\n        errors: {\r\n          title: err.title,\r\n          description: err.description\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    //  Titile Error\r\n    if (title === '') {\r\n      this.setState({\r\n        errors: {\r\n          title: err.title,\r\n          description: ''\r\n        }\r\n      });\r\n      return;\r\n    }\r\n//  Body Error\r\n    if (description === '') {\r\n      this.setState({\r\n        errors: {\r\n          title: '',\r\n          description: err.description\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n//  No Error\r\n    if (title !== '' && description !== '') {\r\n      const editedNote = {id, title, description}\r\n      this.context.editNote(editedNote); // hit in NoteProvider\r\n\r\n      this.props.history.push('/');\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    const { id, title, description } = this.state;\r\n    console.log(this.filterd)\r\n    return (\r\n      <div>\r\n        <h1 className=\"page-header\">Edit Note</h1>\r\n\r\n\r\n        <form onSubmit= { this.submit } > \r\n\r\n          <input\r\n            className=\"input input-text\"\r\n            name=\"title\"\r\n            value= { title }\r\n            onChange= { this.change }\r\n            placeholder=\"Enter Note Title\"\r\n          />\r\n          <textarea\r\n            className=\"input input-text\"\r\n            name=\"description\"\r\n            value= { description }\r\n            onChange= { this.change }\r\n            placeholder=\"Please Note Description\"\r\n            rows = \"3\"\r\n          ></textarea>\r\n\r\n          <span className=\"right\" >\r\n            <button\r\n              className=\"btn delete\"\r\n              onClick= { () => this.context.delete(id) }\r\n            >Delete</button>\r\n\r\n            <Link\r\n              to = \"/\"\r\n              className=\"btn delete\"\r\n            >Cencel</Link>\r\n            <button\r\n              className=\"btn submit\"\r\n              onClick= { this.submit }\r\n              >Save Note</button>\r\n          </span>\r\n\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditNote","import React from 'react';\r\n\r\nconst About = () => {\r\n  return(\r\n    <div className=\"about\">\r\n      <h1 className=\"page-header\">About</h1>\r\n      <p>\r\n      What is Lorem Ipsum?\r\n      Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n      </p><p>\r\n      Why do we use it?\r\n      It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\r\n      \r\n      </p><p>\r\n      Where does it come from?\r\n      Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\r\n      </p><p>\r\n      The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.\r\n      </p><p>\r\n      \r\n      Where can I get some?\r\n      There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.\r\n      \r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport PageHeader from '../PageHeader';\r\n\r\nclass SearchResult extends Component {\r\n\r\n  result = q => {\r\n    console.log(q)\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <PageHeader title=\"Search\" />\r\n        <h2 className=\"page-err\">Content not found!\r\n          <div></div>\r\n          <Link to=\"/\">Go Back</Link>\r\n        </h2>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default SearchResult","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"page-err\">404 : Page Note Found !</h2>\r\n      <h2>Please go back to <Link className=\"\" style={{\"color\":\"#3504a8\"}} to=\"/\">Home Page</Link>.</h2>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default NotFound","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport NoteProvider from '../store/NoteProvider';\r\n\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\n\r\nimport Note from './pages/Note'\r\nimport Notes from './pages/Notes';\r\nimport AddNote from './pages/AddNote';\r\nimport EditNote from './pages/EditNote';\r\nimport About from './pages/About';\r\nimport SearchResult from './pages/SearchResult';\r\nimport NotFound from './pages/NotFound';\r\n\r\n\r\nimport './app.css';\r\n\r\n\r\nconst App = () => {\r\n  return(\r\n    <NoteProvider>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route path = \"/search\" component = { SearchResult } />\r\n          <Route path = \"/about\" component = { About } />\r\n          <Route path = \"/add\" component = { AddNote } />\r\n          <Route path = \"/edit/:id\" component = { EditNote } />\r\n          <Route path= \"/:id\" component = { Note } />\r\n          <Route path = \"/\" component = { Notes } exact />\r\n          <Route component = { NotFound } />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </NoteProvider>\r\n  )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}